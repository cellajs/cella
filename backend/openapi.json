{
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "info": {
    "title": "Cella DEVELOPMENT API",
    "version": "v1",
    "description": "(ATTENTION: PRERELEASE!) This API documentation is split in modules. The documentation is based upon zod schemas that are converted to openapi using hono middleware: zod-openapi."
  },
  "openapi": "3.1.0",
  "tags": [
    {
      "name": "me",
      "description": "Current user endpoints. Split from `users` due to different authorization flow."
    },
    {
      "name": "users",
      "description": "`user` is also an entity, but NOT a contextual entity."
    },
    {
      "name": "memberships",
      "description": "Memberships represent one-to-one relations between a `user` and a contextual `entity`, such as an `organization`. It contains a role and archived, muted status. It also contains parent entities."
    },
    {
      "name": "organizations",
      "description": "Organizations - `organization` - are a core `entity`."
    },
    {
      "name": "requests",
      "description": "Receive contact form, newsletter and waitlist requests."
    },
    {
      "name": "entities",
      "description": "Endpoints that span across entities."
    },
    {
      "name": "system",
      "description": "Endpoints that are system-wide or system (admin) related."
    },
    {
      "name": "auth",
      "description": "Multiple authentication methods are included: email/password combination, OAuth and passkey support."
    },
    {
      "name": "attachments",
      "description": "Be able to leverage different attachment types within an entity."
    },
    {
      "name": "metrics",
      "description": "Observability endpoints."
    }
  ],
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "cella-session-v1",
        "description": "Authentication cookie. Copy the cookie from your network tab and paste it here. If you don't have it, you need to sign in or sign up first."
      }
    },
    "schemas": {
      "EntityBaseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "entityType",
          "slug",
          "name"
        ]
      },
      "UserSummarySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "id",
          "entityType",
          "slug",
          "name",
          "email"
        ]
      },
      "MembershipSummarySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contextType": {
            "type": "string",
            "enum": [
              "organization"
            ]
          },
          "userId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "member",
              "admin"
            ]
          },
          "archived": {
            "type": "boolean"
          },
          "muted": {
            "type": "boolean"
          },
          "order": {
            "type": "number",
            "minimum": -140737488355328,
            "maximum": 140737488355327
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "contextType",
          "userId",
          "role",
          "archived",
          "muted",
          "order",
          "organizationId"
        ]
      },
      "MenuSchema": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "entityType": {
                  "type": "string",
                  "enum": [
                    "organization"
                  ]
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "thumbnailUrl": {
                  "type": "string",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string"
                },
                "modifiedAt": {
                  "type": "string",
                  "nullable": true
                },
                "membership": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "contextType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "userId": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "member",
                        "admin"
                      ]
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "muted": {
                      "type": "boolean"
                    },
                    "order": {
                      "type": "number",
                      "minimum": -140737488355328,
                      "maximum": 140737488355327
                    },
                    "organizationId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "contextType",
                    "userId",
                    "role",
                    "archived",
                    "muted",
                    "order",
                    "organizationId"
                  ]
                },
                "organizationId": {
                  "type": "string"
                },
                "submenu": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "entityType": {
                        "type": "string",
                        "enum": [
                          "organization"
                        ]
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "modifiedAt": {
                        "type": "string",
                        "nullable": true
                      },
                      "membership": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "contextType": {
                            "type": "string",
                            "enum": [
                              "organization"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "admin"
                            ]
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "muted": {
                            "type": "boolean"
                          },
                          "order": {
                            "type": "number",
                            "minimum": -140737488355328,
                            "maximum": 140737488355327
                          },
                          "organizationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "contextType",
                          "userId",
                          "role",
                          "archived",
                          "muted",
                          "order",
                          "organizationId"
                        ]
                      },
                      "organizationId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "entityType",
                      "slug",
                      "name",
                      "createdAt",
                      "modifiedAt",
                      "membership"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "entityType",
                "slug",
                "name",
                "createdAt",
                "modifiedAt",
                "membership"
              ]
            }
          }
        },
        "required": [
          "organization"
        ]
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "severity": {
            "type": "string",
            "enum": [
              "debug",
              "log",
              "info",
              "warn",
              "error"
            ]
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user",
              "organization",
              "attachment"
            ]
          },
          "logId": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "message",
          "type",
          "status",
          "severity"
        ]
      },
      "EntityListItemSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user",
              "organization"
            ]
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "membership": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string"
              },
              "contextType": {
                "type": "string",
                "enum": [
                  "organization"
                ]
              },
              "userId": {
                "type": "string"
              },
              "role": {
                "type": "string",
                "enum": [
                  "member",
                  "admin"
                ]
              },
              "archived": {
                "type": "boolean"
              },
              "muted": {
                "type": "boolean"
              },
              "order": {
                "type": "number",
                "minimum": -140737488355328,
                "maximum": 140737488355327
              },
              "organizationId": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "contextType",
              "userId",
              "role",
              "archived",
              "muted",
              "order",
              "organizationId"
            ]
          }
        },
        "required": [
          "id",
          "entityType",
          "slug",
          "name",
          "membership"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/auth/check-email": {
      "post": {
        "operationId": "checkEmail",
        "tags": [
          "auth"
        ],
        "summary": "Check if email exists",
        "description": "Check if user with email address exists.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "operationId": "signUp",
        "tags": [
          "auth"
        ],
        "summary": "Sign up with password",
        "description": "Sign up with email and password. User will receive a verification email.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 100
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to frontend",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up/{token}": {
      "post": {
        "operationId": "signUpWithToken",
        "tags": [
          "auth"
        ],
        "summary": "Sign up to accept invite",
        "description": "Sign up with email and password to accept system or organization invitation.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 100
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to frontend",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/send-verification-email": {
      "post": {
        "operationId": "sendVerificationEmail",
        "tags": [
          "auth"
        ],
        "summary": "Resend verification email",
        "description": "Resend verification email to user based on token id.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email/{token}": {
      "post": {
        "operationId": "verifyEmail",
        "tags": [
          "auth"
        ],
        "summary": "Verify email by token",
        "description": "Verify email address by token from the verification email. Receive a user session when successful.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Verified & session given",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request-password": {
      "post": {
        "operationId": "requestPassword",
        "tags": [
          "auth"
        ],
        "summary": "Request new password",
        "description": "An email will be sent with a link to create a password.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/create-password/{token}": {
      "post": {
        "operationId": "createPassword",
        "tags": [
          "auth"
        ],
        "summary": "Create password by token",
        "description": "Submit new password and directly receive a user session.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 100
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "operationId": "signIn",
        "tags": [
          "auth"
        ],
        "summary": "Sign in with password",
        "description": "Sign in with email and password.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 100
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/check-token/{id}": {
      "post": {
        "operationId": "checkToken",
        "tags": [
          "auth"
        ],
        "summary": "Token validation check",
        "description": "This endpoint is used to check if a token is still valid. It is used to provide direct user feedback on tokens such as reset password and invitation.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "email_verification",
                "password_reset",
                "invitation"
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "member",
                            "admin"
                          ]
                        },
                        {
                          "nullable": true
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "userId": {
                      "type": "string"
                    },
                    "organizationName": {
                      "type": "string"
                    },
                    "organizationSlug": {
                      "type": "string"
                    },
                    "organizationId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "role"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/accept-invite/{token}": {
      "post": {
        "operationId": "acceptEntityInvite",
        "tags": [
          "auth"
        ],
        "summary": "Accept invitation",
        "description": "Accept invitation token",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation was accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "membership": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "contextType": {
                          "type": "string",
                          "enum": [
                            "organization"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "member",
                            "admin"
                          ]
                        },
                        "archived": {
                          "type": "boolean"
                        },
                        "muted": {
                          "type": "boolean"
                        },
                        "order": {
                          "type": "number",
                          "minimum": -140737488355328,
                          "maximum": 140737488355327
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "contextType",
                        "userId",
                        "role",
                        "archived",
                        "muted",
                        "order",
                        "organizationId"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "slug",
                    "name",
                    "createdAt",
                    "membership"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/impersonation/start": {
      "get": {
        "operationId": "startImpersonation",
        "tags": [
          "auth"
        ],
        "summary": "Start impersonating",
        "description": "System admin impersonates a selected user by id by receiving a special impersonation session.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "targetUserId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Impersonating",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/impersonation/stop": {
      "get": {
        "operationId": "stopImpersonation",
        "tags": [
          "auth"
        ],
        "summary": "Stop impersonating",
        "description": "Stop impersonating by clearing impersonation session.",
        "responses": {
          "200": {
            "description": "Stopped impersonating",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-out": {
      "get": {
        "operationId": "signOut",
        "tags": [
          "auth"
        ],
        "summary": "Sign out",
        "description": "Sign out yourself and clear session.",
        "responses": {
          "200": {
            "description": "User signed out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "operationId": "githubSignIn",
        "tags": [
          "auth"
        ],
        "summary": "Authenticate with GitHub",
        "description": "Authenticate with Github to sign in or sign up. A `connect` (userId),`redirect` or `token` query parameter can be used to connect account, redirect to a specific page or to accept invitation.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "auth",
                "connect",
                "invite"
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "redirect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "connect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to GitHub",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "operationId": "googleSignIn",
        "tags": [
          "auth"
        ],
        "summary": "Authenticate with Google",
        "description": "Authenticate with Google to sign in or sign up. A `connect` (userId),`redirect` or `token` query parameter can be used to connect account, redirect to a specific page or to accept invitation.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "auth",
                "connect",
                "invite"
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "redirect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "connect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Google",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/microsoft": {
      "get": {
        "operationId": "microsoftSignIn",
        "tags": [
          "auth"
        ],
        "summary": "Authenticate with Microsoft",
        "description": "Authenticate with Microsoft to sign in or sign up.  A `connect` (userId),`redirect` or `token` query parameter can be used to connect account, redirect to a specific page or to accept invitation.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "auth",
                "connect",
                "invite"
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "redirect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "connect",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Microsoft",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "operationId": "githubSignInCallback",
        "tags": [
          "auth"
        ],
        "summary": "Callback for GitHub",
        "description": "Callback to receive authorization and basic user data from Github.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "code",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "state",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "error",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "error_description",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "error_uri",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to frontend",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "googleSignInCallback",
        "tags": [
          "auth"
        ],
        "summary": "Callback for Google",
        "description": "Callback to receive authorization and basic user data from Google.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "code",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to frontend",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/microsoft/callback": {
      "get": {
        "operationId": "microsoftSignInCallback",
        "tags": [
          "auth"
        ],
        "summary": "Callback for Microsoft",
        "description": "Callback to receive authorization and basic user data from Microsoft.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "code",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to frontend",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/passkey-challenge": {
      "get": {
        "operationId": "getPasskeyChallenge",
        "tags": [
          "auth"
        ],
        "summary": "Get passkey challenge",
        "description": "Handing over the challenge: this results in a key pair, private and public key being created on the device.",
        "security": [],
        "responses": {
          "200": {
            "description": "Challenge created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "challengeBase64": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "challengeBase64"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/passkey-verification": {
      "post": {
        "operationId": "signInWithPasskey",
        "tags": [
          "auth"
        ],
        "summary": "Verify passkey",
        "description": "Verify passkey by checking the validity of signature with public key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientDataJSON": {
                    "type": "string"
                  },
                  "authenticatorData": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "string"
                  },
                  "userEmail": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientDataJSON",
                  "authenticatorData",
                  "signature",
                  "userEmail"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Passkey verified",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "operationId": "getMe",
        "tags": [
          "me"
        ],
        "summary": "Get me",
        "description": "Get the current user (me). It includes a `counts` object.",
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "firstName": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastName": {
                      "type": "string",
                      "nullable": true
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "newsletter": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "admin"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastStartedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSignInAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "email",
                    "firstName",
                    "lastName",
                    "language",
                    "newsletter",
                    "role",
                    "createdAt",
                    "modifiedAt",
                    "lastSeenAt",
                    "lastStartedAt",
                    "lastSignInAt",
                    "modifiedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateMe",
        "x-wbut": "dsfsd",
        "extensions": {
          "x-wbut": "dsfsd"
        },
        "tags": [
          "me"
        ],
        "summary": "Update self",
        "description": "Update the current user (self).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bannerUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true,
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true,
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "en",
                      "nl"
                    ]
                  },
                  "newsletter": {
                    "type": "boolean"
                  },
                  "thumbnailUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "firstName": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastName": {
                      "type": "string",
                      "nullable": true
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "newsletter": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "admin"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastStartedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSignInAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "email",
                    "firstName",
                    "lastName",
                    "language",
                    "newsletter",
                    "role",
                    "createdAt",
                    "modifiedAt",
                    "lastSeenAt",
                    "lastStartedAt",
                    "lastSignInAt",
                    "modifiedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMe",
        "tags": [
          "me"
        ],
        "summary": "Delete self",
        "description": "Delete the current user (self).",
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/auth": {
      "get": {
        "operationId": "getMyAuth",
        "tags": [
          "me"
        ],
        "summary": "Get self auth data",
        "description": "Get the current user (self). It includes sessions, oauth accounts and sign in options.",
        "responses": {
          "200": {
            "description": "User sign-up info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "oauth": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "github"
                        ]
                      }
                    },
                    "passkey": {
                      "type": "boolean"
                    },
                    "sessions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "regular",
                              "impersonation"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "deviceName": {
                            "type": "string",
                            "nullable": true
                          },
                          "deviceType": {
                            "type": "string",
                            "enum": [
                              "desktop",
                              "mobile"
                            ]
                          },
                          "deviceOs": {
                            "type": "string",
                            "nullable": true
                          },
                          "browser": {
                            "type": "string",
                            "nullable": true
                          },
                          "authStrategy": {
                            "type": "string",
                            "enum": [
                              "github",
                              "google",
                              "microsoft",
                              "password",
                              "passkey",
                              "email"
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "expiresAt": {
                            "type": "string"
                          },
                          "isCurrent": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "userId",
                          "deviceName",
                          "deviceType",
                          "deviceOs",
                          "browser",
                          "authStrategy",
                          "createdAt",
                          "expiresAt",
                          "isCurrent"
                        ]
                      }
                    }
                  },
                  "required": [
                    "oauth",
                    "passkey",
                    "sessions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/menu": {
      "get": {
        "operationId": "getMyMenu",
        "tags": [
          "me"
        ],
        "summary": "Get menu",
        "description": "Receive menu data with all contextual entities of which the current user is a member. It is in essence a restructured list of `memberships` per entity type, with some entity data in it.",
        "responses": {
          "200": {
            "description": "Menu of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organization": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "organization"
                            ]
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "modifiedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "membership": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "contextType": {
                                "type": "string",
                                "enum": [
                                  "organization"
                                ]
                              },
                              "userId": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "member",
                                  "admin"
                                ]
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "muted": {
                                "type": "boolean"
                              },
                              "order": {
                                "type": "number",
                                "minimum": -140737488355328,
                                "maximum": 140737488355327
                              },
                              "organizationId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "contextType",
                              "userId",
                              "role",
                              "archived",
                              "muted",
                              "order",
                              "organizationId"
                            ]
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "submenu": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "entityType": {
                                  "type": "string",
                                  "enum": [
                                    "organization"
                                  ]
                                },
                                "slug": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "thumbnailUrl": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "modifiedAt": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "membership": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "contextType": {
                                      "type": "string",
                                      "enum": [
                                        "organization"
                                      ]
                                    },
                                    "userId": {
                                      "type": "string"
                                    },
                                    "role": {
                                      "type": "string",
                                      "enum": [
                                        "member",
                                        "admin"
                                      ]
                                    },
                                    "archived": {
                                      "type": "boolean"
                                    },
                                    "muted": {
                                      "type": "boolean"
                                    },
                                    "order": {
                                      "type": "number",
                                      "minimum": -140737488355328,
                                      "maximum": 140737488355327
                                    },
                                    "organizationId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "contextType",
                                    "userId",
                                    "role",
                                    "archived",
                                    "muted",
                                    "order",
                                    "organizationId"
                                  ]
                                },
                                "organizationId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "entityType",
                                "slug",
                                "name",
                                "createdAt",
                                "modifiedAt",
                                "membership"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "entityType",
                          "slug",
                          "name",
                          "createdAt",
                          "modifiedAt",
                          "membership"
                        ]
                      }
                    }
                  },
                  "required": [
                    "organization"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/sessions": {
      "delete": {
        "operationId": "deleteSessions",
        "tags": [
          "me"
        ],
        "summary": "Terminate sessions",
        "description": "Terminate sessions of the current user by list of ids.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/leave": {
      "delete": {
        "operationId": "deleteMyMembership",
        "tags": [
          "me"
        ],
        "summary": "Leave entity",
        "description": "Remove your own entity membership by yourself.",
        "security": [],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "entityType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Membership removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/passkey": {
      "post": {
        "operationId": "createPasskey",
        "tags": [
          "me"
        ],
        "summary": "Create passkey",
        "description": "The server associates the key and the credential ID with the user for future authentication flows and checks the validity of the operation by verifying the signed challenge with the key.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmail": {
                    "type": "string"
                  },
                  "attestationObject": {
                    "type": "string"
                  },
                  "clientDataJSON": {
                    "type": "string"
                  }
                },
                "required": [
                  "userEmail",
                  "attestationObject",
                  "clientDataJSON"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Passkey created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deletePasskey",
        "tags": [
          "me"
        ],
        "summary": "Delete passkey",
        "description": "Delete your passkey record.",
        "security": [],
        "responses": {
          "200": {
            "description": "Passkey removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/upload-token": {
      "get": {
        "operationId": "getUploadToken",
        "tags": [
          "me"
        ],
        "summary": "Get upload token",
        "description": "This endpoint is used to get an upload token for a user or organization. The token can be used to upload or private images/files to your S3 bucket using",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                }
              ],
              "default": "false"
            },
            "required": false,
            "name": "public",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "organizationId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "avatar",
                "cover",
                "attachment"
              ]
            },
            "required": true,
            "name": "templateId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Upload token with a scope for a user or organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "public": {
                      "type": "boolean"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "s3": {
                      "type": "boolean"
                    },
                    "signature": {
                      "type": "string"
                    },
                    "params": {
                      "type": "object",
                      "properties": {
                        "auth": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "key"
                          ]
                        }
                      },
                      "required": [
                        "auth"
                      ],
                      "additionalProperties": {
                        "nullable": true
                      }
                    }
                  },
                  "required": [
                    "public",
                    "sub",
                    "s3",
                    "signature",
                    "params"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/me/unsubscribe": {
      "get": {
        "operationId": "unsubscribeMe",
        "tags": [
          "me"
        ],
        "summary": "Unsubscribe",
        "description": "Unsubscribe using a personal unsubscribe token.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to FE",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "tags": [
          "users"
        ],
        "summary": "Get list of users",
        "description": "Get a list of users on system level.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "email",
                "role",
                "createdAt",
                "lastSeenAt",
                "membershipCount"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "admin"
              ],
              "default": "user"
            },
            "required": false,
            "name": "role",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "user"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "slug": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "bannerUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "firstName": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastName": {
                            "type": "string",
                            "nullable": true
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "en",
                              "nl"
                            ]
                          },
                          "newsletter": {
                            "type": "boolean"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "admin"
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "modifiedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastSeenAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastStartedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastSignInAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "entityType",
                          "name",
                          "description",
                          "slug",
                          "thumbnailUrl",
                          "bannerUrl",
                          "email",
                          "firstName",
                          "lastName",
                          "language",
                          "newsletter",
                          "role",
                          "createdAt",
                          "modifiedAt",
                          "lastSeenAt",
                          "lastStartedAt",
                          "lastSignInAt",
                          "modifiedBy"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUsers",
        "tags": [
          "users"
        ],
        "summary": "Delete users",
        "description": "Delete users from system by list of ids.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{idOrSlug}": {
      "get": {
        "operationId": "getUser",
        "tags": [
          "users"
        ],
        "summary": "Get user",
        "description": "Get a user by id or slug.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "firstName": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastName": {
                      "type": "string",
                      "nullable": true
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "newsletter": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "admin"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastStartedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSignInAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "email",
                    "firstName",
                    "lastName",
                    "language",
                    "newsletter",
                    "role",
                    "createdAt",
                    "modifiedAt",
                    "lastSeenAt",
                    "lastStartedAt",
                    "lastSignInAt",
                    "modifiedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "Update a user by id or slug.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bannerUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true,
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true,
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "language": {
                    "type": "string",
                    "enum": [
                      "en",
                      "nl"
                    ]
                  },
                  "newsletter": {
                    "type": "boolean"
                  },
                  "thumbnailUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "user"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "firstName": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastName": {
                      "type": "string",
                      "nullable": true
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "newsletter": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "admin"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastStartedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastSignInAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "email",
                    "firstName",
                    "lastName",
                    "language",
                    "newsletter",
                    "role",
                    "createdAt",
                    "modifiedAt",
                    "lastSeenAt",
                    "lastStartedAt",
                    "lastSignInAt",
                    "modifiedBy"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "operationId": "createOrganization",
        "tags": [
          "organizations"
        ],
        "summary": "Create organization",
        "description": "Create a new organization.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  }
                },
                "required": [
                  "name",
                  "slug"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortName": {
                      "type": "string",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "nullable": true
                    },
                    "timezone": {
                      "type": "string",
                      "nullable": true
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "en",
                          "nl"
                        ]
                      },
                      "minItems": 1
                    },
                    "notificationEmail": {
                      "type": "string",
                      "nullable": true
                    },
                    "emailDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "color": {
                      "type": "string",
                      "nullable": true
                    },
                    "logoUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "websiteUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "welcomeText": {
                      "type": "string",
                      "nullable": true
                    },
                    "authStrategies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chatSupport": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "membership": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "contextType": {
                          "type": "string",
                          "enum": [
                            "organization"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "member",
                            "admin"
                          ]
                        },
                        "archived": {
                          "type": "boolean"
                        },
                        "muted": {
                          "type": "boolean"
                        },
                        "order": {
                          "type": "number",
                          "minimum": -140737488355328,
                          "maximum": 140737488355327
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "contextType",
                        "userId",
                        "role",
                        "archived",
                        "muted",
                        "order",
                        "organizationId"
                      ]
                    },
                    "invitesCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "shortName",
                    "country",
                    "timezone",
                    "defaultLanguage",
                    "languages",
                    "notificationEmail",
                    "emailDomains",
                    "color",
                    "logoUrl",
                    "websiteUrl",
                    "welcomeText",
                    "authStrategies",
                    "chatSupport",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "membership",
                    "invitesCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOrganizations",
        "tags": [
          "organizations"
        ],
        "summary": "Get list of organizations",
        "description": "Get list of organizations. Currently only available to system admins.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "userRole",
                "createdAt"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "organization"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "slug": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "bannerUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "shortName": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string",
                            "nullable": true
                          },
                          "timezone": {
                            "type": "string",
                            "nullable": true
                          },
                          "defaultLanguage": {
                            "type": "string",
                            "enum": [
                              "en",
                              "nl"
                            ]
                          },
                          "languages": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "en",
                                "nl"
                              ]
                            },
                            "minItems": 1
                          },
                          "notificationEmail": {
                            "type": "string",
                            "nullable": true
                          },
                          "emailDomains": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "color": {
                            "type": "string",
                            "nullable": true
                          },
                          "logoUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "websiteUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "welcomeText": {
                            "type": "string",
                            "nullable": true
                          },
                          "authStrategies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "chatSupport": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "membership": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "contextType": {
                                "type": "string",
                                "enum": [
                                  "organization"
                                ]
                              },
                              "userId": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "member",
                                  "admin"
                                ]
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "muted": {
                                "type": "boolean"
                              },
                              "order": {
                                "type": "number",
                                "minimum": -140737488355328,
                                "maximum": 140737488355327
                              },
                              "organizationId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "contextType",
                              "userId",
                              "role",
                              "archived",
                              "muted",
                              "order",
                              "organizationId"
                            ]
                          },
                          "counts": {
                            "type": "object",
                            "properties": {
                              "membership": {
                                "type": "object",
                                "properties": {
                                  "admin": {
                                    "type": "number"
                                  },
                                  "member": {
                                    "type": "number"
                                  },
                                  "pending": {
                                    "type": "number"
                                  },
                                  "total": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "admin",
                                  "member",
                                  "pending",
                                  "total"
                                ]
                              },
                              "related": {
                                "type": "object",
                                "properties": {
                                  "attachment": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "attachment"
                                ]
                              }
                            },
                            "required": [
                              "membership",
                              "related"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "entityType",
                          "name",
                          "description",
                          "slug",
                          "thumbnailUrl",
                          "bannerUrl",
                          "shortName",
                          "country",
                          "timezone",
                          "defaultLanguage",
                          "languages",
                          "notificationEmail",
                          "emailDomains",
                          "color",
                          "logoUrl",
                          "websiteUrl",
                          "welcomeText",
                          "authStrategies",
                          "chatSupport",
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy",
                          "membership",
                          "counts"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOrganizations",
        "tags": [
          "organizations"
        ],
        "summary": "Delete organizations",
        "description": "Delete organizations by ids.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{idOrSlug}": {
      "get": {
        "operationId": "getOrganization",
        "tags": [
          "organizations"
        ],
        "summary": "Get organization",
        "description": "Get an organization by id or slug.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortName": {
                      "type": "string",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "nullable": true
                    },
                    "timezone": {
                      "type": "string",
                      "nullable": true
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "en",
                          "nl"
                        ]
                      },
                      "minItems": 1
                    },
                    "notificationEmail": {
                      "type": "string",
                      "nullable": true
                    },
                    "emailDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "color": {
                      "type": "string",
                      "nullable": true
                    },
                    "logoUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "websiteUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "welcomeText": {
                      "type": "string",
                      "nullable": true
                    },
                    "authStrategies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chatSupport": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "membership": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "contextType": {
                          "type": "string",
                          "enum": [
                            "organization"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "member",
                            "admin"
                          ]
                        },
                        "archived": {
                          "type": "boolean"
                        },
                        "muted": {
                          "type": "boolean"
                        },
                        "order": {
                          "type": "number",
                          "minimum": -140737488355328,
                          "maximum": 140737488355327
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "contextType",
                        "userId",
                        "role",
                        "archived",
                        "muted",
                        "order",
                        "organizationId"
                      ]
                    },
                    "invitesCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "shortName",
                    "country",
                    "timezone",
                    "defaultLanguage",
                    "languages",
                    "notificationEmail",
                    "emailDomains",
                    "color",
                    "logoUrl",
                    "websiteUrl",
                    "welcomeText",
                    "authStrategies",
                    "chatSupport",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "membership",
                    "invitesCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateOrganization",
        "tags": [
          "organizations"
        ],
        "summary": "Update organization",
        "description": "Update organization by id or slug.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "shortName": {
                    "type": "string",
                    "nullable": true,
                    "minLength": 2,
                    "maxLength": 100
                  },
                  "country": {
                    "type": "string",
                    "nullable": true
                  },
                  "timezone": {
                    "type": "string",
                    "nullable": true
                  },
                  "defaultLanguage": {
                    "type": "string",
                    "enum": [
                      "en",
                      "nl"
                    ]
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "minItems": 1
                  },
                  "notificationEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "emailDomains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 100
                    }
                  },
                  "color": {
                    "type": "string",
                    "nullable": true
                  },
                  "thumbnailUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "logoUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "bannerUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "websiteUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "welcomeText": {
                    "type": "string",
                    "nullable": true
                  },
                  "authStrategies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "chatSupport": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "slug": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "shortName": {
                      "type": "string",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "nullable": true
                    },
                    "timezone": {
                      "type": "string",
                      "nullable": true
                    },
                    "defaultLanguage": {
                      "type": "string",
                      "enum": [
                        "en",
                        "nl"
                      ]
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "en",
                          "nl"
                        ]
                      },
                      "minItems": 1
                    },
                    "notificationEmail": {
                      "type": "string",
                      "nullable": true
                    },
                    "emailDomains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "color": {
                      "type": "string",
                      "nullable": true
                    },
                    "logoUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "websiteUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "welcomeText": {
                      "type": "string",
                      "nullable": true
                    },
                    "authStrategies": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chatSupport": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "membership": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "contextType": {
                          "type": "string",
                          "enum": [
                            "organization"
                          ]
                        },
                        "userId": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "member",
                            "admin"
                          ]
                        },
                        "archived": {
                          "type": "boolean"
                        },
                        "muted": {
                          "type": "boolean"
                        },
                        "order": {
                          "type": "number",
                          "minimum": -140737488355328,
                          "maximum": 140737488355327
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "contextType",
                        "userId",
                        "role",
                        "archived",
                        "muted",
                        "order",
                        "organizationId"
                      ]
                    },
                    "invitesCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "entityType",
                    "name",
                    "description",
                    "slug",
                    "thumbnailUrl",
                    "bannerUrl",
                    "shortName",
                    "country",
                    "timezone",
                    "defaultLanguage",
                    "languages",
                    "notificationEmail",
                    "emailDomains",
                    "color",
                    "logoUrl",
                    "websiteUrl",
                    "welcomeText",
                    "authStrategies",
                    "chatSupport",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "membership",
                    "invitesCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/entities/page": {
      "get": {
        "operationId": "getPageEntities",
        "tags": [
          "entities"
        ],
        "summary": "Get list of page entities",
        "description": "Get page entities such as users and organizations. It returns a paginated list of entities to which the user has access. The schema is limited to common fields.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "targetUserId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "organization"
              ]
            },
            "required": false,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "targetOrgId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": false,
            "name": "userMembershipType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Page entities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "user",
                              "organization"
                            ]
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "bannerUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string"
                          },
                          "membership": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "contextType": {
                                "type": "string",
                                "enum": [
                                  "organization"
                                ]
                              },
                              "userId": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "member",
                                  "admin"
                                ]
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "muted": {
                                "type": "boolean"
                              },
                              "order": {
                                "type": "number",
                                "minimum": -140737488355328,
                                "maximum": 140737488355327
                              },
                              "organizationId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "contextType",
                              "userId",
                              "role",
                              "archived",
                              "muted",
                              "order",
                              "organizationId"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "entityType",
                          "slug",
                          "name",
                          "membership"
                        ]
                      }
                    },
                    "counts": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "number"
                        },
                        "organization": {
                          "type": "number"
                        },
                        "attachment": {
                          "type": "number"
                        }
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "counts",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/entities/context": {
      "get": {
        "operationId": "getContextEntities",
        "tags": [
          "entities"
        ],
        "summary": "Get all of context user entities",
        "description": "Get context entities such organizations of specified user. It returns list of entities based of requested tpye to which the user are part of. With user membership & other members of entity.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "targetUserId",
            "in": "query"
          },
          {
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string",
                "enum": [
                  "member",
                  "admin"
                ]
              }
            },
            "required": false,
            "name": "roles",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "createdAt"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Context entities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "entityType": {
                        "type": "string",
                        "enum": [
                          "organization"
                        ]
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "bannerUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "membership": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "contextType": {
                            "type": "string",
                            "enum": [
                              "organization"
                            ]
                          },
                          "userId": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "admin"
                            ]
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "muted": {
                            "type": "boolean"
                          },
                          "order": {
                            "type": "number",
                            "minimum": -140737488355328,
                            "maximum": 140737488355327
                          },
                          "organizationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "contextType",
                          "userId",
                          "role",
                          "archived",
                          "muted",
                          "order",
                          "organizationId"
                        ]
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "entityType": {
                              "type": "string",
                              "enum": [
                                "user"
                              ]
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "thumbnailUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "bannerUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            }
                          },
                          "required": [
                            "id",
                            "entityType",
                            "slug",
                            "name",
                            "email"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "entityType",
                      "slug",
                      "name",
                      "createdAt",
                      "membership",
                      "members"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/entities/check-slug": {
      "post": {
        "operationId": "checkSlug",
        "tags": [
          "entities"
        ],
        "summary": "Check if slug is available",
        "description": "This endpoint is used to check if a slug is available among ALL contextual entities such as organizations.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slug": {
                    "type": "string"
                  },
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "user",
                      "organization",
                      "attachment"
                    ]
                  }
                },
                "required": [
                  "slug",
                  "entityType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slug is available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/system/invite": {
      "post": {
        "operationId": "systemInvite",
        "tags": [
          "system"
        ],
        "summary": "Invite to system",
        "description": "Invite one or more users to system by email address.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "emails"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitations are sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/system/presigned-url": {
      "get": {
        "operationId": "getPresignedUrl",
        "tags": [
          "system"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Presigned URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/system/paddle-webhook": {
      "post": {
        "operationId": "paddleWebhook",
        "tags": [
          "system"
        ],
        "summary": "Paddle webhook",
        "description": "Paddle webhook for subscription events",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paddle webhook received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/system/newsletter": {
      "post": {
        "operationId": "sendNewsletter",
        "tags": [
          "system"
        ],
        "summary": "Newsletter to members",
        "description": "Send a newsletter to requested organizations members.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                }
              ],
              "default": "false"
            },
            "required": false,
            "name": "toSelf",
            "in": "query"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "member",
                        "admin"
                      ]
                    },
                    "minItems": 1
                  },
                  "subject": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "organizationIds",
                  "roles",
                  "subject",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/requests": {
      "post": {
        "operationId": "createRequest",
        "tags": [
          "requests"
        ],
        "summary": "Create request",
        "description": "Create a request on system level. Request supports waitlist, contact form and newsletter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "format": "email"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "waitlist",
                      "newsletter",
                      "contact"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "email",
                  "type",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "waitlist",
                        "newsletter",
                        "contact"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "wasInvited": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "message",
                    "email",
                    "type",
                    "createdAt",
                    "wasInvited"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getRequests",
        "tags": [
          "requests"
        ],
        "summary": "Get list of requests",
        "description": "Get list of requests on system level for waitlist, submit contact form or to join newsletter.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "email",
                "type",
                "createdAt"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "waitlist",
                              "newsletter",
                              "contact"
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "wasInvited": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "message",
                          "email",
                          "type",
                          "createdAt",
                          "wasInvited"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRequests",
        "tags": [
          "requests"
        ],
        "summary": "Delete requests",
        "description": "Delete requests by ids.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "operationId": "getMetrics",
        "tags": [
          "metrics"
        ],
        "summary": "Get metrics",
        "description": "EXPERIMENTAL. Receive node observability metrics.",
        "responses": {
          "200": {
            "description": "Metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "date",
                      "count"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/public": {
      "get": {
        "operationId": "getPublicCounts",
        "tags": [
          "metrics"
        ],
        "summary": "Get public counts",
        "description": "Get a count of all entities (ie. users, organizations). 1 minute in-memory cache.",
        "responses": {
          "200": {
            "description": "Public counts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "number"
                    },
                    "organization": {
                      "type": "number"
                    },
                    "attachment": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "user",
                    "organization",
                    "attachment"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/attachments/shape-proxy": {
      "get": {
        "operationId": "shapeProxy",
        "tags": [
          "attachments"
        ],
        "summary": "Shape proxy",
        "description": "Get shape proxy for attachments to keep attachment data in sync.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/attachments": {
      "post": {
        "operationId": "createAttachment",
        "tags": [
          "attachments"
        ],
        "summary": "Create attachments",
        "description": "Create one or more new attachments.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string",
                      "nullable": true
                    },
                    "filename": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "convertedContentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "size": {
                      "type": "string"
                    },
                    "originalKey": {
                      "type": "string"
                    },
                    "convertedKey": {
                      "type": "string",
                      "nullable": true
                    },
                    "thumbnailKey": {
                      "type": "string",
                      "nullable": true
                    },
                    "organizationId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename",
                    "contentType",
                    "size",
                    "originalKey",
                    "organizationId"
                  ]
                },
                "minItems": 1,
                "maxItems": 50
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "entityType": {
                        "type": "string",
                        "enum": [
                          "attachment"
                        ]
                      },
                      "groupId": {
                        "type": "string",
                        "nullable": true
                      },
                      "filename": {
                        "type": "string"
                      },
                      "contentType": {
                        "type": "string"
                      },
                      "convertedContentType": {
                        "type": "string",
                        "nullable": true
                      },
                      "size": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string",
                        "nullable": true
                      },
                      "modifiedAt": {
                        "type": "string",
                        "nullable": true
                      },
                      "modifiedBy": {
                        "type": "string",
                        "nullable": true
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "convertedUrl": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "entityType",
                      "groupId",
                      "filename",
                      "contentType",
                      "convertedContentType",
                      "size",
                      "createdAt",
                      "createdBy",
                      "modifiedAt",
                      "modifiedBy",
                      "organizationId",
                      "url",
                      "thumbnailUrl",
                      "convertedUrl"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getAttachments",
        "tags": [
          "attachments"
        ],
        "summary": "Get list of attachments",
        "description": "Get attachments for an organization.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "filename",
                "contentType",
                "createdAt"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "attachmentId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "attachment"
                            ]
                          },
                          "groupId": {
                            "type": "string",
                            "nullable": true
                          },
                          "filename": {
                            "type": "string"
                          },
                          "contentType": {
                            "type": "string"
                          },
                          "convertedContentType": {
                            "type": "string",
                            "nullable": true
                          },
                          "size": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "convertedUrl": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "entityType",
                          "groupId",
                          "filename",
                          "contentType",
                          "convertedContentType",
                          "size",
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy",
                          "organizationId",
                          "url",
                          "thumbnailUrl",
                          "convertedUrl"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteAttachments",
        "tags": [
          "attachments"
        ],
        "summary": "Delete attachments",
        "description": "Delete attachments by their ids",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/attachments/{id}": {
      "get": {
        "operationId": "getAttachment",
        "tags": [
          "attachments"
        ],
        "summary": "Get attachment",
        "description": "Get an attachment by id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "attachment"
                      ]
                    },
                    "groupId": {
                      "type": "string",
                      "nullable": true
                    },
                    "filename": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "convertedContentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "size": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "convertedUrl": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "entityType",
                    "groupId",
                    "filename",
                    "contentType",
                    "convertedContentType",
                    "size",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "organizationId",
                    "url",
                    "thumbnailUrl",
                    "convertedUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateAttachment",
        "tags": [
          "attachments"
        ],
        "summary": "Update attachment",
        "description": "Update attachment by id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "originalKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attachment was updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "entityType": {
                      "type": "string",
                      "enum": [
                        "attachment"
                      ]
                    },
                    "groupId": {
                      "type": "string",
                      "nullable": true
                    },
                    "filename": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "convertedContentType": {
                      "type": "string",
                      "nullable": true
                    },
                    "size": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "organizationId": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "convertedUrl": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "entityType",
                    "groupId",
                    "filename",
                    "contentType",
                    "convertedContentType",
                    "size",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "organizationId",
                    "url",
                    "thumbnailUrl",
                    "convertedUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/attachments/{id}/cover": {
      "get": {
        "operationId": "getAttachmentCover",
        "tags": [
          "attachments"
        ],
        "summary": "Get attachment cover",
        "description": "Get attachment cover image by id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/attachments/{id}/link": {
      "get": {
        "operationId": "redirectToAttachment",
        "tags": [
          "attachments"
        ],
        "summary": "Redirect to attachment",
        "description": "Redirect to attachment by id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/memberships": {
      "post": {
        "operationId": "membershipInvite",
        "tags": [
          "memberships"
        ],
        "summary": "Create memberships",
        "description": "Create memberships (invite members that may or may not exist in the system) to an entity such as an organization.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "entityType",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 4,
                      "maxLength": 100
                    },
                    "minItems": 1,
                    "maxItems": 50
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "admin"
                    ]
                  }
                },
                "required": [
                  "emails",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation was sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMemberships",
        "tags": [
          "memberships"
        ],
        "summary": "Delete memberships",
        "description": "Delete memberships by their ids. This will remove the membership but not delete any user(s).",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "entityType",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 50
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiError"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "errors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/memberships/{id}": {
      "put": {
        "operationId": "updateMembership",
        "tags": [
          "memberships"
        ],
        "summary": "Update membership",
        "description": "Update role, muted, or archived status in a membership.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "admin"
                    ]
                  },
                  "muted": {
                    "type": "boolean"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "order": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Membership updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "contextType": {
                      "type": "string",
                      "enum": [
                        "organization"
                      ]
                    },
                    "userId": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "member",
                        "admin"
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "muted": {
                      "type": "boolean"
                    },
                    "order": {
                      "type": "number",
                      "minimum": -140737488355328,
                      "maximum": 140737488355327
                    },
                    "organizationId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "contextType",
                    "userId",
                    "role",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "archived",
                    "muted",
                    "order",
                    "organizationId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/memberships/members": {
      "get": {
        "operationId": "getMembers",
        "tags": [
          "memberships"
        ],
        "summary": "Get list of members",
        "description": "Get members of a context entity by id or slug. It returns members (users) with their membership.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "orgIdOrSlug",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "email",
                "role",
                "createdAt",
                "lastSeenAt"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "entityType",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "member",
                "admin"
              ],
              "default": "member"
            },
            "required": false,
            "name": "role",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "user"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "slug": {
                            "type": "string"
                          },
                          "thumbnailUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "bannerUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "firstName": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastName": {
                            "type": "string",
                            "nullable": true
                          },
                          "language": {
                            "type": "string",
                            "enum": [
                              "en",
                              "nl"
                            ]
                          },
                          "newsletter": {
                            "type": "boolean"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "admin"
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "modifiedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastSeenAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastStartedAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastSignInAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "membership": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "contextType": {
                                "type": "string",
                                "enum": [
                                  "organization"
                                ]
                              },
                              "userId": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "member",
                                  "admin"
                                ]
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "muted": {
                                "type": "boolean"
                              },
                              "order": {
                                "type": "number",
                                "minimum": -140737488355328,
                                "maximum": 140737488355327
                              },
                              "organizationId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "contextType",
                              "userId",
                              "role",
                              "archived",
                              "muted",
                              "order",
                              "organizationId"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "entityType",
                          "name",
                          "description",
                          "slug",
                          "thumbnailUrl",
                          "bannerUrl",
                          "email",
                          "firstName",
                          "lastName",
                          "language",
                          "newsletter",
                          "role",
                          "createdAt",
                          "modifiedAt",
                          "lastSeenAt",
                          "lastStartedAt",
                          "lastSignInAt",
                          "modifiedBy",
                          "membership"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/{orgIdOrSlug}/memberships/pending": {
      "get": {
        "operationId": "getPendingInvitations",
        "tags": [
          "memberships"
        ],
        "summary": "Get list of invitations",
        "description": "Get pending membership invitations from a context entity by id or slug. It returns invite info.",
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "orgIdOrSlug",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "email",
                "role",
                "expiresAt",
                "createdAt",
                "createdBy"
              ],
              "default": "createdAt"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "required": false,
            "name": "order",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "0"
            },
            "required": true,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "40"
            },
            "required": true,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "name": "idOrSlug",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "organization"
              ]
            },
            "required": true,
            "name": "entityType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Invited members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "expiresAt": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "admin"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "createdAt",
                          "createdBy",
                          "expiresAt",
                          "name",
                          "role"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request: problem processing request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: authentication required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found: resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  }
}